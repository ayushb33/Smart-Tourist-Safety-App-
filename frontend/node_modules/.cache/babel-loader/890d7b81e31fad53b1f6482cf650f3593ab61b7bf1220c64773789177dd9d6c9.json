{"ast":null,"code":"// Authentication Service\nclass AuthService{constructor(){this.TOKEN_KEY='tourist_safety_token';this.USER_TYPE_KEY='user_type';this.USER_INFO_KEY='user_info';}setToken(token){localStorage.setItem(this.TOKEN_KEY,token);}getToken(){return localStorage.getItem(this.TOKEN_KEY);}removeToken(){localStorage.removeItem(this.TOKEN_KEY);localStorage.removeItem(this.USER_TYPE_KEY);localStorage.removeItem(this.USER_INFO_KEY);}isAuthenticated(){return!!this.getToken();}setUserType(userType){localStorage.setItem(this.USER_TYPE_KEY,userType);}getUserType(){return localStorage.getItem(this.USER_TYPE_KEY);}setUserInfo(userInfo){localStorage.setItem(this.USER_INFO_KEY,JSON.stringify(userInfo));}getUserInfo(){const userInfo=localStorage.getItem(this.USER_INFO_KEY);return userInfo?JSON.parse(userInfo):null;}async login(email,password,userType){try{var _demoCredentials$user,_demoCredentials$user2;await new Promise(resolve=>setTimeout(resolve,1000));const demoCredentials={tourist:{email:'tourist@demo.com',password:'demo123'},police:{email:'police@demo.com',password:'demo123'}};if(email===((_demoCredentials$user=demoCredentials[userType])===null||_demoCredentials$user===void 0?void 0:_demoCredentials$user.email)&&password===((_demoCredentials$user2=demoCredentials[userType])===null||_demoCredentials$user2===void 0?void 0:_demoCredentials$user2.password)){const token=\"demo_token_\".concat(userType,\"_\").concat(Date.now());const userInfo={email,name:userType==='tourist'?'John Doe':'Officer Smith',id:userType==='tourist'?'tourist-001':'officer-001'};this.setToken(token);this.setUserType(userType);this.setUserInfo(userInfo);return{success:true,token,userType,userInfo};}else{return{success:false,error:'Invalid credentials'};}}catch(error){return{success:false,error:'Login failed'};}}async register(userData){try{await new Promise(resolve=>setTimeout(resolve,1500));const token=\"demo_token_\".concat(userData.userType,\"_\").concat(Date.now());const userInfo={email:userData.email,name:userData.name,id:\"\".concat(userData.userType,\"-\").concat(Date.now()),phone:userData.phone,destination:userData.destination||null};this.setToken(token);this.setUserType(userData.userType);this.setUserInfo(userInfo);return{success:true,token,userType:userData.userType,userInfo};}catch(error){return{success:false,error:'Registration failed'};}}logout(){this.removeToken();window.location.href='/login';}getAuthHeader(){const token=this.getToken();return token?{Authorization:\"Bearer \".concat(token)}:{};}}export const authService=new AuthService();export default authService;","map":{"version":3,"names":["AuthService","constructor","TOKEN_KEY","USER_TYPE_KEY","USER_INFO_KEY","setToken","token","localStorage","setItem","getToken","getItem","removeToken","removeItem","isAuthenticated","setUserType","userType","getUserType","setUserInfo","userInfo","JSON","stringify","getUserInfo","parse","login","email","password","_demoCredentials$user","_demoCredentials$user2","Promise","resolve","setTimeout","demoCredentials","tourist","police","concat","Date","now","name","id","success","error","register","userData","phone","destination","logout","window","location","href","getAuthHeader","Authorization","authService"],"sources":["C:/YatraSathi/tourist-safety-app/frontend/src/services/auth.js"],"sourcesContent":["// Authentication Service\r\nclass AuthService {\r\n  constructor() {\r\n    this.TOKEN_KEY = 'tourist_safety_token';\r\n    this.USER_TYPE_KEY = 'user_type';\r\n    this.USER_INFO_KEY = 'user_info';\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(this.TOKEN_KEY, token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.TOKEN_KEY);\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n    localStorage.removeItem(this.USER_TYPE_KEY);\r\n    localStorage.removeItem(this.USER_INFO_KEY);\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  setUserType(userType) {\r\n    localStorage.setItem(this.USER_TYPE_KEY, userType);\r\n  }\r\n\r\n  getUserType() {\r\n    return localStorage.getItem(this.USER_TYPE_KEY);\r\n  }\r\n\r\n  setUserInfo(userInfo) {\r\n    localStorage.setItem(this.USER_INFO_KEY, JSON.stringify(userInfo));\r\n  }\r\n\r\n  getUserInfo() {\r\n    const userInfo = localStorage.getItem(this.USER_INFO_KEY);\r\n    return userInfo ? JSON.parse(userInfo) : null;\r\n  }\r\n\r\n  async login(email, password, userType) {\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      const demoCredentials = {\r\n        tourist: { email: 'tourist@demo.com', password: 'demo123' },\r\n        police: { email: 'police@demo.com', password: 'demo123' }\r\n      };\r\n\r\n      if (\r\n        email === demoCredentials[userType]?.email && \r\n        password === demoCredentials[userType]?.password\r\n      ) {\r\n        const token = `demo_token_${userType}_${Date.now()}`;\r\n        const userInfo = {\r\n          email,\r\n          name: userType === 'tourist' ? 'John Doe' : 'Officer Smith',\r\n          id: userType === 'tourist' ? 'tourist-001' : 'officer-001'\r\n        };\r\n\r\n        this.setToken(token);\r\n        this.setUserType(userType);\r\n        this.setUserInfo(userInfo);\r\n\r\n        return { success: true, token, userType, userInfo };\r\n      } else {\r\n        return { success: false, error: 'Invalid credentials' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed' };\r\n    }\r\n  }\r\n\r\n  async register(userData) {\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n      const token = `demo_token_${userData.userType}_${Date.now()}`;\r\n      const userInfo = {\r\n        email: userData.email,\r\n        name: userData.name,\r\n        id: `${userData.userType}-${Date.now()}`,\r\n        phone: userData.phone,\r\n        destination: userData.destination || null\r\n      };\r\n\r\n      this.setToken(token);\r\n      this.setUserType(userData.userType);\r\n      this.setUserInfo(userInfo);\r\n\r\n      return { success: true, token, userType: userData.userType, userInfo };\r\n    } catch (error) {\r\n      return { success: false, error: 'Registration failed' };\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.removeToken();\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  getAuthHeader() {\r\n    const token = this.getToken();\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService();\r\nexport default authService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Authentication Service\nclass AuthService {\n  constructor() {\n    this.TOKEN_KEY = 'tourist_safety_token';\n    this.USER_TYPE_KEY = 'user_type';\n    this.USER_INFO_KEY = 'user_info';\n  }\n  setToken(token) {\n    localStorage.setItem(this.TOKEN_KEY, token);\n  }\n  getToken() {\n    return localStorage.getItem(this.TOKEN_KEY);\n  }\n  removeToken() {\n    localStorage.removeItem(this.TOKEN_KEY);\n    localStorage.removeItem(this.USER_TYPE_KEY);\n    localStorage.removeItem(this.USER_INFO_KEY);\n  }\n  isAuthenticated() {\n    return !!this.getToken();\n  }\n  setUserType(userType) {\n    localStorage.setItem(this.USER_TYPE_KEY, userType);\n  }\n  getUserType() {\n    return localStorage.getItem(this.USER_TYPE_KEY);\n  }\n  setUserInfo(userInfo) {\n    localStorage.setItem(this.USER_INFO_KEY, JSON.stringify(userInfo));\n  }\n  getUserInfo() {\n    const userInfo = localStorage.getItem(this.USER_INFO_KEY);\n    return userInfo ? JSON.parse(userInfo) : null;\n  }\n  async login(email, password, userType) {\n    try {\n      var _demoCredentials$user, _demoCredentials$user2;\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const demoCredentials = {\n        tourist: {\n          email: 'tourist@demo.com',\n          password: 'demo123'\n        },\n        police: {\n          email: 'police@demo.com',\n          password: 'demo123'\n        }\n      };\n      if (email === ((_demoCredentials$user = demoCredentials[userType]) === null || _demoCredentials$user === void 0 ? void 0 : _demoCredentials$user.email) && password === ((_demoCredentials$user2 = demoCredentials[userType]) === null || _demoCredentials$user2 === void 0 ? void 0 : _demoCredentials$user2.password)) {\n        const token = `demo_token_${userType}_${Date.now()}`;\n        const userInfo = {\n          email,\n          name: userType === 'tourist' ? 'John Doe' : 'Officer Smith',\n          id: userType === 'tourist' ? 'tourist-001' : 'officer-001'\n        };\n        this.setToken(token);\n        this.setUserType(userType);\n        this.setUserInfo(userInfo);\n        return {\n          success: true,\n          token,\n          userType,\n          userInfo\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Invalid credentials'\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  }\n  async register(userData) {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      const token = `demo_token_${userData.userType}_${Date.now()}`;\n      const userInfo = {\n        email: userData.email,\n        name: userData.name,\n        id: `${userData.userType}-${Date.now()}`,\n        phone: userData.phone,\n        destination: userData.destination || null\n      };\n      this.setToken(token);\n      this.setUserType(userData.userType);\n      this.setUserInfo(userInfo);\n      return {\n        success: true,\n        token,\n        userType: userData.userType,\n        userInfo\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Registration failed'\n      };\n    }\n  }\n  logout() {\n    this.removeToken();\n    window.location.href = '/login';\n  }\n  getAuthHeader() {\n    const token = this.getToken();\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  }\n}\nexport const authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["AuthService","constructor","TOKEN_KEY","USER_TYPE_KEY","USER_INFO_KEY","setToken","token","localStorage","setItem","getToken","getItem","removeToken","removeItem","isAuthenticated","setUserType","userType","getUserType","setUserInfo","userInfo","JSON","stringify","getUserInfo","parse","login","email","password","_demoCredentials$user","_demoCredentials$user2","Promise","resolve","setTimeout","demoCredentials","tourist","police","Date","now","name","id","success","error","register","userData","phone","destination","logout","window","location","href","getAuthHeader","Authorization","authService"],"sources":["C:/YatraSathi/tourist-safety-app/frontend/src/services/auth.js"],"sourcesContent":["// Authentication Service\r\nclass AuthService {\r\n  constructor() {\r\n    this.TOKEN_KEY = 'tourist_safety_token';\r\n    this.USER_TYPE_KEY = 'user_type';\r\n    this.USER_INFO_KEY = 'user_info';\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(this.TOKEN_KEY, token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.TOKEN_KEY);\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem(this.TOKEN_KEY);\r\n    localStorage.removeItem(this.USER_TYPE_KEY);\r\n    localStorage.removeItem(this.USER_INFO_KEY);\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  setUserType(userType) {\r\n    localStorage.setItem(this.USER_TYPE_KEY, userType);\r\n  }\r\n\r\n  getUserType() {\r\n    return localStorage.getItem(this.USER_TYPE_KEY);\r\n  }\r\n\r\n  setUserInfo(userInfo) {\r\n    localStorage.setItem(this.USER_INFO_KEY, JSON.stringify(userInfo));\r\n  }\r\n\r\n  getUserInfo() {\r\n    const userInfo = localStorage.getItem(this.USER_INFO_KEY);\r\n    return userInfo ? JSON.parse(userInfo) : null;\r\n  }\r\n\r\n  async login(email, password, userType) {\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      const demoCredentials = {\r\n        tourist: { email: 'tourist@demo.com', password: 'demo123' },\r\n        police: { email: 'police@demo.com', password: 'demo123' }\r\n      };\r\n\r\n      if (\r\n        email === demoCredentials[userType]?.email && \r\n        password === demoCredentials[userType]?.password\r\n      ) {\r\n        const token = `demo_token_${userType}_${Date.now()}`;\r\n        const userInfo = {\r\n          email,\r\n          name: userType === 'tourist' ? 'John Doe' : 'Officer Smith',\r\n          id: userType === 'tourist' ? 'tourist-001' : 'officer-001'\r\n        };\r\n\r\n        this.setToken(token);\r\n        this.setUserType(userType);\r\n        this.setUserInfo(userInfo);\r\n\r\n        return { success: true, token, userType, userInfo };\r\n      } else {\r\n        return { success: false, error: 'Invalid credentials' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed' };\r\n    }\r\n  }\r\n\r\n  async register(userData) {\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n      const token = `demo_token_${userData.userType}_${Date.now()}`;\r\n      const userInfo = {\r\n        email: userData.email,\r\n        name: userData.name,\r\n        id: `${userData.userType}-${Date.now()}`,\r\n        phone: userData.phone,\r\n        destination: userData.destination || null\r\n      };\r\n\r\n      this.setToken(token);\r\n      this.setUserType(userData.userType);\r\n      this.setUserInfo(userInfo);\r\n\r\n      return { success: true, token, userType: userData.userType, userInfo };\r\n    } catch (error) {\r\n      return { success: false, error: 'Registration failed' };\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.removeToken();\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  getAuthHeader() {\r\n    const token = this.getToken();\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService();\r\nexport default authService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}